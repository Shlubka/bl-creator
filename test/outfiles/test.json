{
  "blocks": [
    {
      "x": 0,
      "y": 0,
      "text": "#include <stdio.h>\n\n// Объявление функции\n\nvoid printMessage(const char *name) {\n    printf(\"Привет, %s!\\n\", name);\n}\n\nint main() {\n    // Объявление переменных\n    int a, b, sum;\n    char name[50];\n\n    // Ввод данных\n    printf(\"Введите ваше имя: \");\n    scanf(\"%s\", name);\n\n    printf(\"Введите два целых числа: \");\n    scanf(\"%d %d\", &a, &b);\n\n    // Условные операторы с вложенностью\n    if (a > b) {\n        printf(\"%d больше %d\\n\", a, b);\n        if (a > 10) {\n            printf(\"%d также больше 10\\n\", a);\n        } else {\n            printf(\"%d меньше или равно 10\\n\", a);\n        }\n    } \n    else if (a < b) {\n        printf(\"%d меньше %d\\n\", a, b);\n        if (b > 10) {\n            printf(\"%d также больше 10\\n\", b);\n        \n} else {\n            printf(\"%d меньше или равно 10\\n\", b);\n        }\n    } \n    else {\n        printf(\"%d равно %d\\n\", a, b);\n    }\n\n    // Цикл for\n    printf(\"Цикл for: \");\n    for (int i = 0; i < 5; i++) {\n        printf(\"%d \", i);\n    }\n    printf(\"\\n\");\n\n    // Цикл while\n    int i = 0;\n    printf(\"Цикл while: \");\n    while (i < 5) {\n        printf(\"%d \", i);\n        i++;\n    }\n    printf(\"\\n\");\n\n    // Цикл do...while\n    /*i = 0;\n    printf(\"Цикл do...while: \");\n    do {\n        printf(\"%d \", i);\n        i++;\n    } while (i < 5);\n    printf(\"\\n\");\n*/\n\n    // Выполнение арифметической операции\n    sum = a + b;\n    printf(\"Сумма %d и %d равна %d\\n\", a, b, sum);\n\n    // Вызов функции\n    printMessage(name);\n\n    return 0;\n}",
      "width": 120,
      "height": 60,
      "type": "Блок",
      "isMenuBlock": false,
      "fontSize": 14,
      "textHeight": 14,
      "isBold": false,
      "isItalic": false,
      "textAlign": "",
      "labelsPosition": 1
    },
    {
      "x": 0,
      "y": 100,
      "text": "#",
      "width": 120,
      "height": 60,
      "type": "Блок",
      "isMenuBlock": false,
      "fontSize": 14,
      "textHeight": 14,
      "isBold": false,
      "isItalic": false,
      "textAlign": "",
      "labelsPosition": 1
    },
    {
      "x": 0,
      "y": 200,
      "text": "include <stdio.h>\n\n// Объявление функции\n\nvoid printMessage(const char *name) {\n    printf(\"Привет, %s!\\n\", name);\n}\n\nint main() {\n    // Объявление переменных\n    int a, b, sum;\n    char name[50];\n\n    // Ввод данных\n    printf(\"Введите ваше имя: \");\n    scanf(\"%s\", name);\n\n    printf(\"Введите два целых числа: \");\n    scanf(\"%d %d\", &a, &b);\n\n    // Условные операторы с вложенностью\n    if (a > b) {\n        printf(\"%d больше %d\\n\", a, b);\n        if (a > 10) {\n            printf(\"%d также больше 10\\n\", a);\n        } else {\n            printf(\"%d меньше или равно 10\\n\", a);\n        }\n    } \n    else if (a < b) {\n        printf(\"%d меньше %d\\n\", a, b);\n        if (b > 10) {\n            printf(\"%d также больше 10\\n\", b);\n        \n} else {\n            printf(\"%d меньше или равно 10\\n\", b);\n        }\n    } \n    else {\n        printf(\"%d равно %d\\n\", a, b);\n    }\n\n    // Цикл for\n    printf(\"Цикл for: \");\n    for (int i = 0; i < 5; i++) {\n        printf(\"%d \", i);\n    }\n    printf(\"\\n\");\n\n    // Цикл while\n    int i = 0;\n    printf(\"Цикл while: \");\n    while (i < 5) {\n        printf(\"%d \", i);\n        i++;\n    }\n    printf(\"\\n\");\n\n    // Цикл do...while\n    /*i = 0;\n    printf(\"Цикл do...while: \");\n    do {\n        printf(\"%d \", i);\n        i++;\n    } while (i < 5);\n    printf(\"\\n\");\n*/\n\n    // Выполнение арифметической операции\n    sum = a + b;\n    printf(\"Сумма %d и %d равна %d\\n\", a, b, sum);\n\n    // Вызов функции\n    printMessage(name);\n\n    return 0;\n}",
      "width": 120,
      "height": 60,
      "type": "Блок",
      "isMenuBlock": false,
      "fontSize": 14,
      "textHeight": 14,
      "isBold": false,
      "isItalic": false,
      "textAlign": "",
      "labelsPosition": 1
    }
  ],
  "arrows": [
    {
      "startIndex": 0,
      "endIndex": 1,
      "startConnectorIndex": 2,
      "endConnectorIndex": 0,
      "nodes": [],
      "counts": [
        1,
        1,
        1
      ]
    },
    {
      "startIndex": 1,
      "endIndex": 2,
      "startConnectorIndex": 2,
      "endConnectorIndex": 0,
      "nodes": [],
      "counts": [
        1,
        1,
        1
      ]
    }
  ],
  "x0": 0,
  "y0": 0
}